name: OpenAI API Call
on:
  push:
    branches: [ main, master ]
jobs:
  openai_call:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install jq
      uses: dcarbone/install-jq-action@v2.1.0

    - name: Send code to OpenAI API
      run: |
        COMMITTED_CODE=""
        for file in $(git diff --name-only HEAD HEAD~1 | grep '^src/'); do
          COMMITTED_CODE+=$(git show HEAD:"$file" | tr '\n' ' ')
        done
        
        echo "Committed Code:"
        echo "$COMMITTED_CODE"

        RESPONSE=$(curl --location 'https://api.openai.com/v1/chat/completions' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer ${{ secrets.OPENAI_API_KEY}}' \
        --data '{
            "model": "gpt-3.5-turbo",
            "messages": [
              {
                "role": "system",
                "content": "The user is going to send a piece of code, if the code it'\''s bugged can you fix and return in this format: Bugs were found, here is the solution:\n {fixed code}? If it'\''s not bugged can you just send: No bugs were founded"
              },
              {
                "role": "user",
                "content": "'"${COMMITTED_CODE}"'"
              }
            ]
        }')

        RESPONSE_CONTENT=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
        echo $RESPONSE_CONTENT > response.txt

    - name: Print OpenAI API response
      run: cat response.txt

    - name: Send code to Hugging Face API
      run: |
        COMMITTED_CODE=""
        for file in $(git diff --name-only HEAD HEAD~1 | grep '^src/'); do
          COMMITTED_CODE+=$(git show HEAD:"$file" | tr '\n' ' ')
        done
        
        echo "Committed Code:"
        echo "$COMMITTED_CODE"

        RESPONSE=$(curl --location 'https://api-inference.huggingface.co/models/JoaoJunior/T5_APR_java_python_v1' \
        --header 'Content-Type: application/json' \
        --header 'Authorization: Bearer ${{ secrets.HF_API_KEY}}' \
        --data '{
            "inputs": "'"${COMMITTED_CODE}"'"
        }')

        echo $RESPONSE > response_hf.txt
 
    - name: Print Hugging Face API response
      run: cat response_hf.txt
    
